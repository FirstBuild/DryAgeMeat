ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_1_initVar
  20              		.bss
  21              		.type	UART_1_initVar, %object
  22              		.size	UART_1_initVar, 1
  23              	UART_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.UART_1_Start,"ax",%progbits
  26              		.align	2
  27              		.global	UART_1_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	UART_1_Start, %function
  31              	UART_1_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 2


  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  34              		.loc 1 77 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 3


  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  44              		.loc 1 79 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  49              		.loc 1 81 0
  50 000c FFF7FEFF 		bl	UART_1_Init
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  51              		.loc 1 82 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  56              		.loc 1 85 0
  57 0016 FFF7FEFF 		bl	UART_1_Enable
  86:Generated_Source\PSoC5/UART_1.c **** }
  58              		.loc 1 86 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	UART_1_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	UART_1_Start, .-UART_1_Start
  68              		.section	.text.UART_1_Init,"ax",%progbits
  69              		.align	2
  70              		.global	UART_1_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	UART_1_Init, %function
  74              	UART_1_Init:
  75              	.LFB1:
  87:Generated_Source\PSoC5/UART_1.c **** 
  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 4


  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  76              		.loc 1 107 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 80B4     		push	{r7}
  82              		.cfi_def_cfa_offset 4
  83              		.cfi_offset 7, -4
  84 0002 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  86              		.loc 1 138 0
  87 0004 064B     		ldr	r3, .L6
  88 0006 0622     		movs	r2, #6
  89 0008 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 5


  90              		.loc 1 139 0
  91 000a 064B     		ldr	r3, .L6+4
  92 000c 4722     		movs	r2, #71
  93 000e 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  94              		.loc 1 150 0
  95 0010 054B     		ldr	r3, .L6+8
  96 0012 0122     		movs	r2, #1
  97 0014 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
  98              		.loc 1 160 0
  99 0016 00BF     		nop
 100 0018 BD46     		mov	sp, r7
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 001a 80BC     		pop	{r7}
 104              		.cfi_restore 7
 105              		.cfi_def_cfa_offset 0
 106 001c 7047     		bx	lr
 107              	.L7:
 108 001e 00BF     		.align	2
 109              	.L6:
 110 0020 2B650040 		.word	1073767723
 111 0024 3B650040 		.word	1073767739
 112 0028 8A650040 		.word	1073767818
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	UART_1_Init, .-UART_1_Init
 116              		.section	.text.UART_1_Enable,"ax",%progbits
 117              		.align	2
 118              		.global	UART_1_Enable
 119              		.thumb
 120              		.thumb_func
 121              		.type	UART_1_Enable, %function
 122              	UART_1_Enable:
 123              	.LFB2:
 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 6


 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
 124              		.loc 1 184 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 136              		.loc 1 186 0
 137 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 138 000a 0346     		mov	r3, r0
 139 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 7


 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 140              		.loc 1 211 0
 141 000e 084A     		ldr	r2, .L9
 142 0010 074B     		ldr	r3, .L9
 143 0012 1B78     		ldrb	r3, [r3]
 144 0014 DBB2     		uxtb	r3, r3
 145 0016 43F01003 		orr	r3, r3, #16
 146 001a DBB2     		uxtb	r3, r3
 147 001c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 148              		.loc 1 222 0
 149 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 150 0020 1846     		mov	r0, r3
 151 0022 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART_1.c **** }
 152              		.loc 1 223 0
 153 0026 00BF     		nop
 154 0028 0837     		adds	r7, r7, #8
 155              		.cfi_def_cfa_offset 8
 156 002a BD46     		mov	sp, r7
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 002c 80BD     		pop	{r7, pc}
 160              	.L10:
 161 002e 00BF     		.align	2
 162              	.L9:
 163 0030 9A650040 		.word	1073767834
 164              		.cfi_endproc
 165              	.LFE2:
 166              		.size	UART_1_Enable, .-UART_1_Enable
 167              		.section	.text.UART_1_Stop,"ax",%progbits
 168              		.align	2
 169              		.global	UART_1_Stop
 170              		.thumb
 171              		.thumb_func
 172              		.type	UART_1_Stop, %function
 173              	UART_1_Stop:
 174              	.LFB3:
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 8


 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 175              		.loc 1 241 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 187              		.loc 1 243 0
 188 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 189 000a 0346     		mov	r3, r0
 190 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 9


 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 191              		.loc 1 270 0
 192 000e 084A     		ldr	r2, .L12
 193 0010 074B     		ldr	r3, .L12
 194 0012 1B78     		ldrb	r3, [r3]
 195 0014 DBB2     		uxtb	r3, r3
 196 0016 23F01003 		bic	r3, r3, #16
 197 001a DBB2     		uxtb	r3, r3
 198 001c 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 199              		.loc 1 277 0
 200 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 201 0020 1846     		mov	r0, r3
 202 0022 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART_1.c **** }
 203              		.loc 1 278 0
 204 0026 00BF     		nop
 205 0028 0837     		adds	r7, r7, #8
 206              		.cfi_def_cfa_offset 8
 207 002a BD46     		mov	sp, r7
 208              		.cfi_def_cfa_register 13
 209              		@ sp needed
 210 002c 80BD     		pop	{r7, pc}
 211              	.L13:
 212 002e 00BF     		.align	2
 213              	.L12:
 214 0030 9A650040 		.word	1073767834
 215              		.cfi_endproc
 216              	.LFE3:
 217              		.size	UART_1_Stop, .-UART_1_Stop
 218              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	UART_1_ReadControlRegister
 221              		.thumb
 222              		.thumb_func
 223              		.type	UART_1_ReadControlRegister, %function
 224              	UART_1_ReadControlRegister:
 225              	.LFB4:
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 10


 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 226              		.loc 1 296 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 7, -4
 234 0002 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 236              		.loc 1 298 0
 237 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 238              		.loc 1 302 0
 239 0006 1846     		mov	r0, r3
 240 0008 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 000a 80BC     		pop	{r7}
 244              		.cfi_restore 7
 245              		.cfi_def_cfa_offset 0
 246 000c 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE4:
 249              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 250 000e 00BF     		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 251              		.align	2
 252              		.global	UART_1_WriteControlRegister
 253              		.thumb
 254              		.thumb_func
 255              		.type	UART_1_WriteControlRegister, %function
 256              	UART_1_WriteControlRegister:
 257              	.LFB5:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 11


 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 258              		.loc 1 320 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 8
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              		.cfi_def_cfa_offset 16
 268 0004 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 270 0006 0346     		mov	r3, r0
 271 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 272              		.loc 1 329 0
 273 000a 00BF     		nop
 274 000c 0C37     		adds	r7, r7, #12
 275              		.cfi_def_cfa_offset 4
 276 000e BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0010 80BC     		pop	{r7}
 280              		.cfi_restore 7
 281              		.cfi_def_cfa_offset 0
 282 0012 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE5:
 285              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 286              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 287              		.align	2
 288              		.global	UART_1_SetTxInterruptMode
 289              		.thumb
 290              		.thumb_func
 291              		.type	UART_1_SetTxInterruptMode, %function
 292              	UART_1_SetTxInterruptMode:
 293              	.LFB6:
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 12


 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 13


 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 14


 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:Generated_Source\PSoC5/UART_1.c ****     }
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 15


 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 16


 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 17


 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 18


 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 19


 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 20


 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 21


 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 22


 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 294              		.loc 1 909 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299 0000 80B4     		push	{r7}
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 7, -4
 302 0002 83B0     		sub	sp, sp, #12
 303              		.cfi_def_cfa_offset 16
 304 0004 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306 0006 0346     		mov	r3, r0
 307 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 308              		.loc 1 910 0
 309 000a 044A     		ldr	r2, .L18
 310 000c FB79     		ldrb	r3, [r7, #7]
 311 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_1.c ****     }
 312              		.loc 1 911 0
 313 0010 00BF     		nop
 314 0012 0C37     		adds	r7, r7, #12
 315              		.cfi_def_cfa_offset 4
 316 0014 BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 0016 80BC     		pop	{r7}
 320              		.cfi_restore 7
 321              		.cfi_def_cfa_offset 0
 322 0018 7047     		bx	lr
 323              	.L19:
 324 001a 00BF     		.align	2
 325              	.L18:
 326 001c 8A650040 		.word	1073767818
 327              		.cfi_endproc
 328              	.LFE6:
 329              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 330              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 331              		.align	2
 332              		.global	UART_1_WriteTxData
 333              		.thumb
 334              		.thumb_func
 335              		.type	UART_1_WriteTxData, %function
 336              	UART_1_WriteTxData:
 337              	.LFB7:
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 23


 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 338              		.loc 1 943 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 83B0     		sub	sp, sp, #12
 347              		.cfi_def_cfa_offset 16
 348 0004 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 350 0006 0346     		mov	r3, r0
 351 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 352              		.loc 1 945 0
 353 000a 064B     		ldr	r3, .L23
 354 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 355 000e 002B     		cmp	r3, #0
 356 0010 02D0     		beq	.L22
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 24


 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_1.c **** 
 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC5/UART_1.c **** 
 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 357              		.loc 1 976 0
 358 0012 054A     		ldr	r2, .L23+4
 359 0014 FB79     		ldrb	r3, [r7, #7]
 360 0016 1370     		strb	r3, [r2]
 361              	.L22:
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 362              		.loc 1 980 0
 363 0018 00BF     		nop
 364 001a 0C37     		adds	r7, r7, #12
 365              		.cfi_def_cfa_offset 4
 366 001c BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 001e 80BC     		pop	{r7}
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 0020 7047     		bx	lr
 373              	.L24:
 374 0022 00BF     		.align	2
 375              	.L23:
 376 0024 00000000 		.word	UART_1_initVar
 377 0028 4A650040 		.word	1073767754
 378              		.cfi_endproc
 379              	.LFE7:
 380              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 381              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 382              		.align	2
 383              		.global	UART_1_ReadTxStatus
 384              		.thumb
 385              		.thumb_func
 386              		.type	UART_1_ReadTxStatus, %function
 387              	UART_1_ReadTxStatus:
 388              	.LFB8:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 25


 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 389              		.loc 1 1004 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394 0000 80B4     		push	{r7}
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 399              		.loc 1 1005 0
 400 0004 034B     		ldr	r3, .L27
 401 0006 1B78     		ldrb	r3, [r3]
 402 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_1.c ****     }
 403              		.loc 1 1006 0
 404 000a 1846     		mov	r0, r3
 405 000c BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 000e 80BC     		pop	{r7}
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 0010 7047     		bx	lr
 412              	.L28:
 413 0012 00BF     		.align	2
 414              	.L27:
 415 0014 6A650040 		.word	1073767786
 416              		.cfi_endproc
 417              	.LFE8:
 418              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 419              		.section	.text.UART_1_PutChar,"ax",%progbits
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 26


 420              		.align	2
 421              		.global	UART_1_PutChar
 422              		.thumb
 423              		.thumb_func
 424              		.type	UART_1_PutChar, %function
 425              	UART_1_PutChar:
 426              	.LFB9:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 427              		.loc 1 1042 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432 0000 80B4     		push	{r7}
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 439 0006 0346     		mov	r3, r0
 440 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 27


1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 28


1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 441              		.loc 1 1107 0
 442 000a 00BF     		nop
 443              	.L30:
 444              		.loc 1 1107 0 is_stmt 0 discriminator 1
 445 000c 074B     		ldr	r3, .L31
 446 000e 1B78     		ldrb	r3, [r3]
 447 0010 DBB2     		uxtb	r3, r3
 448 0012 03F00403 		and	r3, r3, #4
 449 0016 002B     		cmp	r3, #0
 450 0018 F8D1     		bne	.L30
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 451              		.loc 1 1113 0 is_stmt 1
 452 001a 054A     		ldr	r2, .L31+4
 453 001c FB79     		ldrb	r3, [r7, #7]
 454 001e 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
 455              		.loc 1 1116 0
 456 0020 00BF     		nop
 457 0022 0C37     		adds	r7, r7, #12
 458              		.cfi_def_cfa_offset 4
 459 0024 BD46     		mov	sp, r7
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 0026 80BC     		pop	{r7}
 463              		.cfi_restore 7
 464              		.cfi_def_cfa_offset 0
 465 0028 7047     		bx	lr
 466              	.L32:
 467 002a 00BF     		.align	2
 468              	.L31:
 469 002c 6A650040 		.word	1073767786
 470 0030 4A650040 		.word	1073767754
 471              		.cfi_endproc
 472              	.LFE9:
 473              		.size	UART_1_PutChar, .-UART_1_PutChar
 474              		.section	.text.UART_1_PutString,"ax",%progbits
 475              		.align	2
 476              		.global	UART_1_PutString
 477              		.thumb
 478              		.thumb_func
 479              		.type	UART_1_PutString, %function
 480              	UART_1_PutString:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 29


 481              	.LFB10:
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 482              		.loc 1 1146 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 16
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486 0000 80B5     		push	{r7, lr}
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 7, -8
 489              		.cfi_offset 14, -4
 490 0002 84B0     		sub	sp, sp, #16
 491              		.cfi_def_cfa_offset 24
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 494 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 495              		.loc 1 1147 0
 496 0008 0023     		movs	r3, #0
 497 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 498              		.loc 1 1150 0
 499 000c 0C4B     		ldr	r3, .L38
 500 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0010 002B     		cmp	r3, #0
 502 0012 10D0     		beq	.L37
1151:Generated_Source\PSoC5/UART_1.c ****         {
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 30


1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 503              		.loc 1 1153 0
 504 0014 09E0     		b	.L35
 505              	.L36:
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 506              		.loc 1 1155 0
 507 0016 FB89     		ldrh	r3, [r7, #14]
 508 0018 7A68     		ldr	r2, [r7, #4]
 509 001a 1344     		add	r3, r3, r2
 510 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 511 001e 1846     		mov	r0, r3
 512 0020 FFF7FEFF 		bl	UART_1_PutChar
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 513              		.loc 1 1156 0
 514 0024 FB89     		ldrh	r3, [r7, #14]
 515 0026 0133     		adds	r3, r3, #1
 516 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 517              	.L35:
1153:Generated_Source\PSoC5/UART_1.c ****             {
 518              		.loc 1 1153 0
 519 002a FB89     		ldrh	r3, [r7, #14]
 520 002c 7A68     		ldr	r2, [r7, #4]
 521 002e 1344     		add	r3, r3, r2
 522 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 523 0032 002B     		cmp	r3, #0
 524 0034 EFD1     		bne	.L36
 525              	.L37:
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
 526              		.loc 1 1159 0
 527 0036 00BF     		nop
 528 0038 1037     		adds	r7, r7, #16
 529              		.cfi_def_cfa_offset 8
 530 003a BD46     		mov	sp, r7
 531              		.cfi_def_cfa_register 13
 532              		@ sp needed
 533 003c 80BD     		pop	{r7, pc}
 534              	.L39:
 535 003e 00BF     		.align	2
 536              	.L38:
 537 0040 00000000 		.word	UART_1_initVar
 538              		.cfi_endproc
 539              	.LFE10:
 540              		.size	UART_1_PutString, .-UART_1_PutString
 541              		.section	.text.UART_1_PutArray,"ax",%progbits
 542              		.align	2
 543              		.global	UART_1_PutArray
 544              		.thumb
 545              		.thumb_func
 546              		.type	UART_1_PutArray, %function
 547              	UART_1_PutArray:
 548              	.LFB11:
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 31


1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 549              		.loc 1 1193 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 16
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 80B5     		push	{r7, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 84B0     		sub	sp, sp, #16
 558              		.cfi_def_cfa_offset 24
 559 0004 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 561 0006 7860     		str	r0, [r7, #4]
 562 0008 0B46     		mov	r3, r1
 563 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 564              		.loc 1 1194 0
 565 000c 0023     		movs	r3, #0
 566 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 567              		.loc 1 1197 0
 568 0010 0B4B     		ldr	r3, .L45
 569 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 32


 570 0014 002B     		cmp	r3, #0
 571 0016 0ED0     		beq	.L44
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 572              		.loc 1 1199 0
 573 0018 09E0     		b	.L42
 574              	.L43:
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 575              		.loc 1 1201 0
 576 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 577 001c 7A68     		ldr	r2, [r7, #4]
 578 001e 1344     		add	r3, r3, r2
 579 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 580 0022 1846     		mov	r0, r3
 581 0024 FFF7FEFF 		bl	UART_1_PutChar
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 582              		.loc 1 1202 0
 583 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 584 002a 0133     		adds	r3, r3, #1
 585 002c FB73     		strb	r3, [r7, #15]
 586              	.L42:
1199:Generated_Source\PSoC5/UART_1.c ****             {
 587              		.loc 1 1199 0
 588 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 589 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 590 0032 9A42     		cmp	r2, r3
 591 0034 F1D3     		bcc	.L43
 592              	.L44:
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
 593              		.loc 1 1205 0
 594 0036 00BF     		nop
 595 0038 1037     		adds	r7, r7, #16
 596              		.cfi_def_cfa_offset 8
 597 003a BD46     		mov	sp, r7
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 003c 80BD     		pop	{r7, pc}
 601              	.L46:
 602 003e 00BF     		.align	2
 603              	.L45:
 604 0040 00000000 		.word	UART_1_initVar
 605              		.cfi_endproc
 606              	.LFE11:
 607              		.size	UART_1_PutArray, .-UART_1_PutArray
 608              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 609              		.align	2
 610              		.global	UART_1_PutCRLF
 611              		.thumb
 612              		.thumb_func
 613              		.type	UART_1_PutCRLF, %function
 614              	UART_1_PutCRLF:
 615              	.LFB12:
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 33


1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 616              		.loc 1 1231 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 82B0     		sub	sp, sp, #8
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 0346     		mov	r3, r0
 629 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 630              		.loc 1 1233 0
 631 000a 094B     		ldr	r3, .L50
 632 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 633 000e 002B     		cmp	r3, #0
 634 0010 09D0     		beq	.L49
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 635              		.loc 1 1235 0
 636 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 637 0014 1846     		mov	r0, r3
 638 0016 FFF7FEFF 		bl	UART_1_PutChar
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 639              		.loc 1 1236 0
 640 001a 0D20     		movs	r0, #13
 641 001c FFF7FEFF 		bl	UART_1_PutChar
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 642              		.loc 1 1237 0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 34


 643 0020 0A20     		movs	r0, #10
 644 0022 FFF7FEFF 		bl	UART_1_PutChar
 645              	.L49:
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
 646              		.loc 1 1239 0
 647 0026 00BF     		nop
 648 0028 0837     		adds	r7, r7, #8
 649              		.cfi_def_cfa_offset 8
 650 002a BD46     		mov	sp, r7
 651              		.cfi_def_cfa_register 13
 652              		@ sp needed
 653 002c 80BD     		pop	{r7, pc}
 654              	.L51:
 655 002e 00BF     		.align	2
 656              	.L50:
 657 0030 00000000 		.word	UART_1_initVar
 658              		.cfi_endproc
 659              	.LFE12:
 660              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 661              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 662              		.align	2
 663              		.global	UART_1_GetTxBufferSize
 664              		.thumb
 665              		.thumb_func
 666              		.type	UART_1_GetTxBufferSize, %function
 667              	UART_1_GetTxBufferSize:
 668              	.LFB13:
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 35


1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 669              		.loc 1 1275 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 8
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 0002 83B0     		sub	sp, sp, #12
 678              		.cfi_def_cfa_offset 16
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 681              		.loc 1 1301 0
 682 0006 0D4B     		ldr	r3, .L57
 683 0008 1B78     		ldrb	r3, [r3]
 684 000a FB71     		strb	r3, [r7, #7]
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 685              		.loc 1 1304 0
 686 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 687 000e 03F00403 		and	r3, r3, #4
 688 0012 002B     		cmp	r3, #0
 689 0014 02D0     		beq	.L53
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 36


1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 690              		.loc 1 1306 0
 691 0016 0423     		movs	r3, #4
 692 0018 FB71     		strb	r3, [r7, #7]
 693 001a 09E0     		b	.L54
 694              	.L53:
1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 695              		.loc 1 1308 0
 696 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 697 001e 03F00203 		and	r3, r3, #2
 698 0022 002B     		cmp	r3, #0
 699 0024 02D0     		beq	.L55
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 700              		.loc 1 1310 0
 701 0026 0023     		movs	r3, #0
 702 0028 FB71     		strb	r3, [r7, #7]
 703 002a 01E0     		b	.L54
 704              	.L55:
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
 705              		.loc 1 1315 0
 706 002c 0123     		movs	r3, #1
 707 002e FB71     		strb	r3, [r7, #7]
 708              	.L54:
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
 709              		.loc 1 1320 0
 710 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/UART_1.c ****     }
 711              		.loc 1 1321 0
 712 0032 1846     		mov	r0, r3
 713 0034 0C37     		adds	r7, r7, #12
 714              		.cfi_def_cfa_offset 4
 715 0036 BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0038 80BC     		pop	{r7}
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 003a 7047     		bx	lr
 722              	.L58:
 723              		.align	2
 724              	.L57:
 725 003c 6A650040 		.word	1073767786
 726              		.cfi_endproc
 727              	.LFE13:
 728              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 729              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 37


 730              		.align	2
 731              		.global	UART_1_ClearTxBuffer
 732              		.thumb
 733              		.thumb_func
 734              		.type	UART_1_ClearTxBuffer, %function
 735              	UART_1_ClearTxBuffer:
 736              	.LFB14:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 737              		.loc 1 1355 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0000 80B5     		push	{r7, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0002 82B0     		sub	sp, sp, #8
 746              		.cfi_def_cfa_offset 16
 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 749              		.loc 1 1358 0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 38


 750 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 751 000a 0346     		mov	r3, r0
 752 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 753              		.loc 1 1360 0
 754 000e 0C4A     		ldr	r2, .L60
 755 0010 0B4B     		ldr	r3, .L60
 756 0012 1B78     		ldrb	r3, [r3]
 757 0014 DBB2     		uxtb	r3, r3
 758 0016 43F00103 		orr	r3, r3, #1
 759 001a DBB2     		uxtb	r3, r3
 760 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 761              		.loc 1 1361 0
 762 001e 084A     		ldr	r2, .L60
 763 0020 074B     		ldr	r3, .L60
 764 0022 1B78     		ldrb	r3, [r3]
 765 0024 DBB2     		uxtb	r3, r3
 766 0026 23F00103 		bic	r3, r3, #1
 767 002a DBB2     		uxtb	r3, r3
 768 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 769              		.loc 1 1362 0
 770 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 771 0030 1846     		mov	r0, r3
 772 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
 773              		.loc 1 1376 0
 774 0036 00BF     		nop
 775 0038 0837     		adds	r7, r7, #8
 776              		.cfi_def_cfa_offset 8
 777 003a BD46     		mov	sp, r7
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 003c 80BD     		pop	{r7, pc}
 781              	.L61:
 782 003e 00BF     		.align	2
 783              	.L60:
 784 0040 9A650040 		.word	1073767834
 785              		.cfi_endproc
 786              	.LFE14:
 787              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 788              		.section	.text.UART_1_SendBreak,"ax",%progbits
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 39


 789              		.align	2
 790              		.global	UART_1_SendBreak
 791              		.thumb
 792              		.thumb_func
 793              		.type	UART_1_SendBreak, %function
 794              	UART_1_SendBreak:
 795              	.LFB15:
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 40


1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 796              		.loc 1 1441 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 16
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 7, -4
 804 0002 85B0     		sub	sp, sp, #20
 805              		.cfi_def_cfa_offset 24
 806 0004 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 808 0006 0346     		mov	r3, r0
 809 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 810              		.loc 1 1444 0
 811 000a 1F4B     		ldr	r3, .L71
 812 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 813 000e 002B     		cmp	r3, #0
 814 0010 35D0     		beq	.L70
 815              	.LBB2:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 41


1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 816              		.loc 1 1490 0
 817 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 818 0014 002B     		cmp	r3, #0
 819 0016 02D0     		beq	.L64
 820              		.loc 1 1490 0 is_stmt 0 discriminator 1
 821 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 822 001a 032B     		cmp	r3, #3
 823 001c 12D1     		bne	.L65
 824              	.L64:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 825              		.loc 1 1501 0 is_stmt 1
 826 001e 1B4B     		ldr	r3, .L71+4
 827 0020 1B78     		ldrb	r3, [r3]
 828 0022 DAB2     		uxtb	r2, r3
 829 0024 1A4B     		ldr	r3, .L71+8
 830 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 831              		.loc 1 1502 0
 832 0028 184B     		ldr	r3, .L71+4
 833 002a 6722     		movs	r2, #103
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 42


 834 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 835              		.loc 1 1509 0
 836 002e 194B     		ldr	r3, .L71+12
 837 0030 0022     		movs	r2, #0
 838 0032 1A70     		strb	r2, [r3]
 839              	.L66:
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 840              		.loc 1 1513 0 discriminator 1
 841 0034 184B     		ldr	r3, .L71+16
 842 0036 1B78     		ldrb	r3, [r3]
 843 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 844              		.loc 1 1515 0 discriminator 1
 845 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 846 003c 03F00203 		and	r3, r3, #2
 847 0040 002B     		cmp	r3, #0
 848 0042 F7D1     		bne	.L66
 849              	.L65:
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 850              		.loc 1 1518 0
 851 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 852 0046 012B     		cmp	r3, #1
 853 0048 02D0     		beq	.L67
 854              		.loc 1 1518 0 is_stmt 0 discriminator 1
 855 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 856 004c 032B     		cmp	r3, #3
 857 004e 09D1     		bne	.L68
 858              	.L67:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 859              		.loc 1 1523 0 is_stmt 1 discriminator 1
 860 0050 114B     		ldr	r3, .L71+16
 861 0052 1B78     		ldrb	r3, [r3]
 862 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 863              		.loc 1 1525 0 discriminator 1
 864 0056 FB7B     		ldrb	r3, [r7, #15]
 865 0058 DB43     		mvns	r3, r3
 866 005a DBB2     		uxtb	r3, r3
 867 005c 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 43


 868 0060 002B     		cmp	r3, #0
 869 0062 F5D1     		bne	.L67
 870              	.L68:
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 871              		.loc 1 1528 0
 872 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 873 0066 012B     		cmp	r3, #1
 874 0068 05D0     		beq	.L69
 875              		.loc 1 1528 0 is_stmt 0 discriminator 1
 876 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 877 006c 022B     		cmp	r3, #2
 878 006e 02D0     		beq	.L69
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 879              		.loc 1 1529 0 is_stmt 1
 880 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 881 0072 032B     		cmp	r3, #3
 882 0074 03D1     		bne	.L70
 883              	.L69:
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 884              		.loc 1 1534 0
 885 0076 054B     		ldr	r3, .L71+4
 886 0078 054A     		ldr	r2, .L71+8
 887 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 888 007c 1A70     		strb	r2, [r3]
 889              	.L70:
 890              	.LBE2:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
 891              		.loc 1 1547 0
 892 007e 00BF     		nop
 893 0080 1437     		adds	r7, r7, #20
 894              		.cfi_def_cfa_offset 4
 895 0082 BD46     		mov	sp, r7
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 0084 80BC     		pop	{r7}
 899              		.cfi_restore 7
 900              		.cfi_def_cfa_offset 0
 901 0086 7047     		bx	lr
 902              	.L72:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 44


 903              		.align	2
 904              	.L71:
 905 0088 00000000 		.word	UART_1_initVar
 906 008c 3B650040 		.word	1073767739
 907 0090 01000000 		.word	txPeriod.5033
 908 0094 4A650040 		.word	1073767754
 909 0098 6A650040 		.word	1073767786
 910              		.cfi_endproc
 911              	.LFE15:
 912              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 913              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 914              		.align	2
 915              		.global	UART_1_SetTxAddressMode
 916              		.thumb
 917              		.thumb_func
 918              		.type	UART_1_SetTxAddressMode, %function
 919              	UART_1_SetTxAddressMode:
 920              	.LFB16:
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 921              		.loc 1 1573 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926 0000 80B4     		push	{r7}
 927              		.cfi_def_cfa_offset 4
 928              		.cfi_offset 7, -4
 929 0002 83B0     		sub	sp, sp, #12
 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 933 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 45


 934 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_1.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_1.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_1.c ****         {
1577:Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_1.c ****         }
1582:Generated_Source\PSoC5/UART_1.c ****         else
1583:Generated_Source\PSoC5/UART_1.c ****         {
1584:Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART_1.c ****         }
1589:Generated_Source\PSoC5/UART_1.c ****     }
 935              		.loc 1 1589 0
 936 000a 00BF     		nop
 937 000c 0C37     		adds	r7, r7, #12
 938              		.cfi_def_cfa_offset 4
 939 000e BD46     		mov	sp, r7
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 0010 80BC     		pop	{r7}
 943              		.cfi_restore 7
 944              		.cfi_def_cfa_offset 0
 945 0012 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE16:
 948              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 949              		.bss
 950              	txPeriod.5033:
 951 0001 00       		.space	1
 952              		.text
 953              	.Letext0:
 954              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 955              		.section	.debug_info,"",%progbits
 956              	.Ldebug_info0:
 957 0000 7B030000 		.4byte	0x37b
 958 0004 0400     		.2byte	0x4
 959 0006 00000000 		.4byte	.Ldebug_abbrev0
 960 000a 04       		.byte	0x4
 961 000b 01       		.uleb128 0x1
 962 000c 27000000 		.4byte	.LASF46
 963 0010 0C       		.byte	0xc
 964 0011 21020000 		.4byte	.LASF47
 965 0015 3B010000 		.4byte	.LASF48
 966 0019 00000000 		.4byte	.Ldebug_ranges0+0
 967 001d 00000000 		.4byte	0
 968 0021 00000000 		.4byte	.Ldebug_line0
 969 0025 02       		.uleb128 0x2
 970 0026 01       		.byte	0x1
 971 0027 06       		.byte	0x6
 972 0028 43030000 		.4byte	.LASF0
 973 002c 02       		.uleb128 0x2
 974 002d 01       		.byte	0x1
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 46


 975 002e 08       		.byte	0x8
 976 002f E5010000 		.4byte	.LASF1
 977 0033 02       		.uleb128 0x2
 978 0034 02       		.byte	0x2
 979 0035 05       		.byte	0x5
 980 0036 01020000 		.4byte	.LASF2
 981 003a 02       		.uleb128 0x2
 982 003b 02       		.byte	0x2
 983 003c 07       		.byte	0x7
 984 003d E2000000 		.4byte	.LASF3
 985 0041 02       		.uleb128 0x2
 986 0042 04       		.byte	0x4
 987 0043 05       		.byte	0x5
 988 0044 06030000 		.4byte	.LASF4
 989 0048 02       		.uleb128 0x2
 990 0049 04       		.byte	0x4
 991 004a 07       		.byte	0x7
 992 004b AA010000 		.4byte	.LASF5
 993 004f 02       		.uleb128 0x2
 994 0050 08       		.byte	0x8
 995 0051 05       		.byte	0x5
 996 0052 00000000 		.4byte	.LASF6
 997 0056 02       		.uleb128 0x2
 998 0057 08       		.byte	0x8
 999 0058 07       		.byte	0x7
 1000 0059 58020000 		.4byte	.LASF7
 1001 005d 03       		.uleb128 0x3
 1002 005e 04       		.byte	0x4
 1003 005f 05       		.byte	0x5
 1004 0060 696E7400 		.ascii	"int\000"
 1005 0064 02       		.uleb128 0x2
 1006 0065 04       		.byte	0x4
 1007 0066 07       		.byte	0x7
 1008 0067 F5000000 		.4byte	.LASF8
 1009 006b 04       		.uleb128 0x4
 1010 006c BC010000 		.4byte	.LASF9
 1011 0070 02       		.byte	0x2
 1012 0071 9201     		.2byte	0x192
 1013 0073 2C000000 		.4byte	0x2c
 1014 0077 04       		.uleb128 0x4
 1015 0078 0B020000 		.4byte	.LASF10
 1016 007c 02       		.byte	0x2
 1017 007d 9301     		.2byte	0x193
 1018 007f 3A000000 		.4byte	0x3a
 1019 0083 02       		.uleb128 0x2
 1020 0084 04       		.byte	0x4
 1021 0085 04       		.byte	0x4
 1022 0086 35010000 		.4byte	.LASF11
 1023 008a 02       		.uleb128 0x2
 1024 008b 08       		.byte	0x8
 1025 008c 04       		.byte	0x4
 1026 008d F3010000 		.4byte	.LASF12
 1027 0091 04       		.uleb128 0x4
 1028 0092 B1020000 		.4byte	.LASF13
 1029 0096 02       		.byte	0x2
 1030 0097 A301     		.2byte	0x1a3
 1031 0099 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 47


 1032 009d 02       		.uleb128 0x2
 1033 009e 01       		.byte	0x1
 1034 009f 08       		.byte	0x8
 1035 00a0 C2020000 		.4byte	.LASF14
 1036 00a4 04       		.uleb128 0x4
 1037 00a5 7E010000 		.4byte	.LASF15
 1038 00a9 02       		.byte	0x2
 1039 00aa 3C02     		.2byte	0x23c
 1040 00ac B0000000 		.4byte	0xb0
 1041 00b0 05       		.uleb128 0x5
 1042 00b1 6B000000 		.4byte	0x6b
 1043 00b5 02       		.uleb128 0x2
 1044 00b6 08       		.byte	0x8
 1045 00b7 04       		.byte	0x4
 1046 00b8 37030000 		.4byte	.LASF16
 1047 00bc 02       		.uleb128 0x2
 1048 00bd 04       		.byte	0x4
 1049 00be 07       		.byte	0x7
 1050 00bf A8020000 		.4byte	.LASF17
 1051 00c3 06       		.uleb128 0x6
 1052 00c4 1A000000 		.4byte	.LASF18
 1053 00c8 01       		.byte	0x1
 1054 00c9 4C       		.byte	0x4c
 1055 00ca 00000000 		.4byte	.LFB0
 1056 00ce 24000000 		.4byte	.LFE0-.LFB0
 1057 00d2 01       		.uleb128 0x1
 1058 00d3 9C       		.byte	0x9c
 1059 00d4 07       		.uleb128 0x7
 1060 00d5 0E000000 		.4byte	.LASF19
 1061 00d9 01       		.byte	0x1
 1062 00da 6A       		.byte	0x6a
 1063 00db 00000000 		.4byte	.LFB1
 1064 00df 2C000000 		.4byte	.LFE1-.LFB1
 1065 00e3 01       		.uleb128 0x1
 1066 00e4 9C       		.byte	0x9c
 1067 00e5 08       		.uleb128 0x8
 1068 00e6 29030000 		.4byte	.LASF20
 1069 00ea 01       		.byte	0x1
 1070 00eb B7       		.byte	0xb7
 1071 00ec 00000000 		.4byte	.LFB2
 1072 00f0 34000000 		.4byte	.LFE2-.LFB2
 1073 00f4 01       		.uleb128 0x1
 1074 00f5 9C       		.byte	0x9c
 1075 00f6 09010000 		.4byte	0x109
 1076 00fa 09       		.uleb128 0x9
 1077 00fb D4010000 		.4byte	.LASF22
 1078 00ff 01       		.byte	0x1
 1079 0100 B9       		.byte	0xb9
 1080 0101 6B000000 		.4byte	0x6b
 1081 0105 02       		.uleb128 0x2
 1082 0106 91       		.byte	0x91
 1083 0107 77       		.sleb128 -9
 1084 0108 00       		.byte	0
 1085 0109 08       		.uleb128 0x8
 1086 010a 9E010000 		.4byte	.LASF21
 1087 010e 01       		.byte	0x1
 1088 010f F0       		.byte	0xf0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 48


 1089 0110 00000000 		.4byte	.LFB3
 1090 0114 34000000 		.4byte	.LFE3-.LFB3
 1091 0118 01       		.uleb128 0x1
 1092 0119 9C       		.byte	0x9c
 1093 011a 2D010000 		.4byte	0x12d
 1094 011e 09       		.uleb128 0x9
 1095 011f D4010000 		.4byte	.LASF22
 1096 0123 01       		.byte	0x1
 1097 0124 F2       		.byte	0xf2
 1098 0125 6B000000 		.4byte	0x6b
 1099 0129 02       		.uleb128 0x2
 1100 012a 91       		.byte	0x91
 1101 012b 77       		.sleb128 -9
 1102 012c 00       		.byte	0
 1103 012d 0A       		.uleb128 0xa
 1104 012e 83010000 		.4byte	.LASF29
 1105 0132 01       		.byte	0x1
 1106 0133 2701     		.2byte	0x127
 1107 0135 6B000000 		.4byte	0x6b
 1108 0139 00000000 		.4byte	.LFB4
 1109 013d 0E000000 		.4byte	.LFE4-.LFB4
 1110 0141 01       		.uleb128 0x1
 1111 0142 9C       		.byte	0x9c
 1112 0143 0B       		.uleb128 0xb
 1113 0144 B5000000 		.4byte	.LASF23
 1114 0148 01       		.byte	0x1
 1115 0149 3F01     		.2byte	0x13f
 1116 014b 00000000 		.4byte	.LFB5
 1117 014f 14000000 		.4byte	.LFE5-.LFB5
 1118 0153 01       		.uleb128 0x1
 1119 0154 9C       		.byte	0x9c
 1120 0155 69010000 		.4byte	0x169
 1121 0159 0C       		.uleb128 0xc
 1122 015a C2010000 		.4byte	.LASF25
 1123 015e 01       		.byte	0x1
 1124 015f 3F01     		.2byte	0x13f
 1125 0161 6B000000 		.4byte	0x6b
 1126 0165 02       		.uleb128 0x2
 1127 0166 91       		.byte	0x91
 1128 0167 77       		.sleb128 -9
 1129 0168 00       		.byte	0
 1130 0169 0B       		.uleb128 0xb
 1131 016a 0F030000 		.4byte	.LASF24
 1132 016e 01       		.byte	0x1
 1133 016f 8C03     		.2byte	0x38c
 1134 0171 00000000 		.4byte	.LFB6
 1135 0175 20000000 		.4byte	.LFE6-.LFB6
 1136 0179 01       		.uleb128 0x1
 1137 017a 9C       		.byte	0x9c
 1138 017b 8F010000 		.4byte	0x18f
 1139 017f 0C       		.uleb128 0xc
 1140 0180 FA010000 		.4byte	.LASF26
 1141 0184 01       		.byte	0x1
 1142 0185 8C03     		.2byte	0x38c
 1143 0187 6B000000 		.4byte	0x6b
 1144 018b 02       		.uleb128 0x2
 1145 018c 91       		.byte	0x91
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 49


 1146 018d 77       		.sleb128 -9
 1147 018e 00       		.byte	0
 1148 018f 0B       		.uleb128 0xb
 1149 0190 CF020000 		.4byte	.LASF27
 1150 0194 01       		.byte	0x1
 1151 0195 AE03     		.2byte	0x3ae
 1152 0197 00000000 		.4byte	.LFB7
 1153 019b 2C000000 		.4byte	.LFE7-.LFB7
 1154 019f 01       		.uleb128 0x1
 1155 01a0 9C       		.byte	0x9c
 1156 01a1 B5010000 		.4byte	0x1b5
 1157 01a5 0C       		.uleb128 0xc
 1158 01a6 B7020000 		.4byte	.LASF28
 1159 01aa 01       		.byte	0x1
 1160 01ab AE03     		.2byte	0x3ae
 1161 01ad 6B000000 		.4byte	0x6b
 1162 01b1 02       		.uleb128 0x2
 1163 01b2 91       		.byte	0x91
 1164 01b3 77       		.sleb128 -9
 1165 01b4 00       		.byte	0
 1166 01b5 0A       		.uleb128 0xa
 1167 01b6 1A010000 		.4byte	.LASF30
 1168 01ba 01       		.byte	0x1
 1169 01bb EB03     		.2byte	0x3eb
 1170 01bd 6B000000 		.4byte	0x6b
 1171 01c1 00000000 		.4byte	.LFB8
 1172 01c5 18000000 		.4byte	.LFE8-.LFB8
 1173 01c9 01       		.uleb128 0x1
 1174 01ca 9C       		.byte	0x9c
 1175 01cb 0B       		.uleb128 0xb
 1176 01cc 12020000 		.4byte	.LASF31
 1177 01d0 01       		.byte	0x1
 1178 01d1 1104     		.2byte	0x411
 1179 01d3 00000000 		.4byte	.LFB9
 1180 01d7 34000000 		.4byte	.LFE9-.LFB9
 1181 01db 01       		.uleb128 0x1
 1182 01dc 9C       		.byte	0x9c
 1183 01dd F1010000 		.4byte	0x1f1
 1184 01e1 0C       		.uleb128 0xc
 1185 01e2 B7020000 		.4byte	.LASF28
 1186 01e6 01       		.byte	0x1
 1187 01e7 1104     		.2byte	0x411
 1188 01e9 6B000000 		.4byte	0x6b
 1189 01ed 02       		.uleb128 0x2
 1190 01ee 91       		.byte	0x91
 1191 01ef 77       		.sleb128 -9
 1192 01f0 00       		.byte	0
 1193 01f1 0D       		.uleb128 0xd
 1194 01f2 4F030000 		.4byte	.LASF32
 1195 01f6 01       		.byte	0x1
 1196 01f7 7904     		.2byte	0x479
 1197 01f9 00000000 		.4byte	.LFB10
 1198 01fd 44000000 		.4byte	.LFE10-.LFB10
 1199 0201 01       		.uleb128 0x1
 1200 0202 9C       		.byte	0x9c
 1201 0203 26020000 		.4byte	0x226
 1202 0207 0C       		.uleb128 0xc
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 50


 1203 0208 2E010000 		.4byte	.LASF33
 1204 020c 01       		.byte	0x1
 1205 020d 7904     		.2byte	0x479
 1206 020f 26020000 		.4byte	0x226
 1207 0213 02       		.uleb128 0x2
 1208 0214 91       		.byte	0x91
 1209 0215 6C       		.sleb128 -20
 1210 0216 0E       		.uleb128 0xe
 1211 0217 7E020000 		.4byte	.LASF34
 1212 021b 01       		.byte	0x1
 1213 021c 7B04     		.2byte	0x47b
 1214 021e 77000000 		.4byte	0x77
 1215 0222 02       		.uleb128 0x2
 1216 0223 91       		.byte	0x91
 1217 0224 76       		.sleb128 -10
 1218 0225 00       		.byte	0
 1219 0226 0F       		.uleb128 0xf
 1220 0227 04       		.byte	0x4
 1221 0228 2C020000 		.4byte	0x22c
 1222 022c 10       		.uleb128 0x10
 1223 022d 91000000 		.4byte	0x91
 1224 0231 0D       		.uleb128 0xd
 1225 0232 98020000 		.4byte	.LASF35
 1226 0236 01       		.byte	0x1
 1227 0237 A704     		.2byte	0x4a7
 1228 0239 00000000 		.4byte	.LFB11
 1229 023d 44000000 		.4byte	.LFE11-.LFB11
 1230 0241 01       		.uleb128 0x1
 1231 0242 9C       		.byte	0x9c
 1232 0243 75020000 		.4byte	0x275
 1233 0247 0C       		.uleb128 0xc
 1234 0248 2E010000 		.4byte	.LASF33
 1235 024c 01       		.byte	0x1
 1236 024d A704     		.2byte	0x4a7
 1237 024f 75020000 		.4byte	0x275
 1238 0253 02       		.uleb128 0x2
 1239 0254 91       		.byte	0x91
 1240 0255 6C       		.sleb128 -20
 1241 0256 0C       		.uleb128 0xc
 1242 0257 CA010000 		.4byte	.LASF36
 1243 025b 01       		.byte	0x1
 1244 025c A704     		.2byte	0x4a7
 1245 025e 6B000000 		.4byte	0x6b
 1246 0262 02       		.uleb128 0x2
 1247 0263 91       		.byte	0x91
 1248 0264 6B       		.sleb128 -21
 1249 0265 0E       		.uleb128 0xe
 1250 0266 7E020000 		.4byte	.LASF34
 1251 026a 01       		.byte	0x1
 1252 026b AA04     		.2byte	0x4aa
 1253 026d 6B000000 		.4byte	0x6b
 1254 0271 02       		.uleb128 0x2
 1255 0272 91       		.byte	0x91
 1256 0273 77       		.sleb128 -9
 1257 0274 00       		.byte	0
 1258 0275 0F       		.uleb128 0xf
 1259 0276 04       		.byte	0x4
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 51


 1260 0277 7B020000 		.4byte	0x27b
 1261 027b 10       		.uleb128 0x10
 1262 027c 6B000000 		.4byte	0x6b
 1263 0280 0D       		.uleb128 0xd
 1264 0281 6F020000 		.4byte	.LASF37
 1265 0285 01       		.byte	0x1
 1266 0286 CE04     		.2byte	0x4ce
 1267 0288 00000000 		.4byte	.LFB12
 1268 028c 34000000 		.4byte	.LFE12-.LFB12
 1269 0290 01       		.uleb128 0x1
 1270 0291 9C       		.byte	0x9c
 1271 0292 A6020000 		.4byte	0x2a6
 1272 0296 0C       		.uleb128 0xc
 1273 0297 B7020000 		.4byte	.LASF28
 1274 029b 01       		.byte	0x1
 1275 029c CE04     		.2byte	0x4ce
 1276 029e 6B000000 		.4byte	0x6b
 1277 02a2 02       		.uleb128 0x2
 1278 02a3 91       		.byte	0x91
 1279 02a4 77       		.sleb128 -9
 1280 02a5 00       		.byte	0
 1281 02a6 11       		.uleb128 0x11
 1282 02a7 41020000 		.4byte	.LASF49
 1283 02ab 01       		.byte	0x1
 1284 02ac F904     		.2byte	0x4f9
 1285 02ae 6B000000 		.4byte	0x6b
 1286 02b2 00000000 		.4byte	.LFB13
 1287 02b6 40000000 		.4byte	.LFE13-.LFB13
 1288 02ba 01       		.uleb128 0x1
 1289 02bb 9C       		.byte	0x9c
 1290 02bc D0020000 		.4byte	0x2d0
 1291 02c0 0E       		.uleb128 0xe
 1292 02c1 60030000 		.4byte	.LASF38
 1293 02c5 01       		.byte	0x1
 1294 02c6 FC04     		.2byte	0x4fc
 1295 02c8 6B000000 		.4byte	0x6b
 1296 02cc 02       		.uleb128 0x2
 1297 02cd 91       		.byte	0x91
 1298 02ce 77       		.sleb128 -9
 1299 02cf 00       		.byte	0
 1300 02d0 0D       		.uleb128 0xd
 1301 02d1 E2020000 		.4byte	.LASF39
 1302 02d5 01       		.byte	0x1
 1303 02d6 4A05     		.2byte	0x54a
 1304 02d8 00000000 		.4byte	.LFB14
 1305 02dc 44000000 		.4byte	.LFE14-.LFB14
 1306 02e0 01       		.uleb128 0x1
 1307 02e1 9C       		.byte	0x9c
 1308 02e2 F6020000 		.4byte	0x2f6
 1309 02e6 0E       		.uleb128 0xe
 1310 02e7 D4010000 		.4byte	.LASF22
 1311 02eb 01       		.byte	0x1
 1312 02ec 4C05     		.2byte	0x54c
 1313 02ee 6B000000 		.4byte	0x6b
 1314 02f2 02       		.uleb128 0x2
 1315 02f3 91       		.byte	0x91
 1316 02f4 77       		.sleb128 -9
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 52


 1317 02f5 00       		.byte	0
 1318 02f6 0B       		.uleb128 0xb
 1319 02f7 87020000 		.4byte	.LASF40
 1320 02fb 01       		.byte	0x1
 1321 02fc A005     		.2byte	0x5a0
 1322 02fe 00000000 		.4byte	.LFB15
 1323 0302 9C000000 		.4byte	.LFE15-.LFB15
 1324 0306 01       		.uleb128 0x1
 1325 0307 9C       		.byte	0x9c
 1326 0308 47030000 		.4byte	0x347
 1327 030c 0C       		.uleb128 0xc
 1328 030d C7020000 		.4byte	.LASF41
 1329 0311 01       		.byte	0x1
 1330 0312 A005     		.2byte	0x5a0
 1331 0314 6B000000 		.4byte	0x6b
 1332 0318 02       		.uleb128 0x2
 1333 0319 91       		.byte	0x91
 1334 031a 6F       		.sleb128 -17
 1335 031b 12       		.uleb128 0x12
 1336 031c 12000000 		.4byte	.LBB2
 1337 0320 6C000000 		.4byte	.LBE2-.LBB2
 1338 0324 0E       		.uleb128 0xe
 1339 0325 DA000000 		.4byte	.LASF42
 1340 0329 01       		.byte	0x1
 1341 032a A805     		.2byte	0x5a8
 1342 032c 6B000000 		.4byte	0x6b
 1343 0330 02       		.uleb128 0x2
 1344 0331 91       		.byte	0x91
 1345 0332 77       		.sleb128 -9
 1346 0333 0E       		.uleb128 0xe
 1347 0334 D1000000 		.4byte	.LASF43
 1348 0338 01       		.byte	0x1
 1349 0339 D005     		.2byte	0x5d0
 1350 033b 6B000000 		.4byte	0x6b
 1351 033f 05       		.uleb128 0x5
 1352 0340 03       		.byte	0x3
 1353 0341 01000000 		.4byte	txPeriod.5033
 1354 0345 00       		.byte	0
 1355 0346 00       		.byte	0
 1356 0347 0B       		.uleb128 0xb
 1357 0348 02010000 		.4byte	.LASF44
 1358 034c 01       		.byte	0x1
 1359 034d 2406     		.2byte	0x624
 1360 034f 00000000 		.4byte	.LFB16
 1361 0353 14000000 		.4byte	.LFE16-.LFB16
 1362 0357 01       		.uleb128 0x1
 1363 0358 9C       		.byte	0x9c
 1364 0359 6D030000 		.4byte	0x36d
 1365 035d 0C       		.uleb128 0xc
 1366 035e 72010000 		.4byte	.LASF45
 1367 0362 01       		.byte	0x1
 1368 0363 2406     		.2byte	0x624
 1369 0365 6B000000 		.4byte	0x6b
 1370 0369 02       		.uleb128 0x2
 1371 036a 91       		.byte	0x91
 1372 036b 77       		.sleb128 -9
 1373 036c 00       		.byte	0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 53


 1374 036d 13       		.uleb128 0x13
 1375 036e F7020000 		.4byte	.LASF50
 1376 0372 01       		.byte	0x1
 1377 0373 1B       		.byte	0x1b
 1378 0374 6B000000 		.4byte	0x6b
 1379 0378 05       		.uleb128 0x5
 1380 0379 03       		.byte	0x3
 1381 037a 00000000 		.4byte	UART_1_initVar
 1382 037e 00       		.byte	0
 1383              		.section	.debug_abbrev,"",%progbits
 1384              	.Ldebug_abbrev0:
 1385 0000 01       		.uleb128 0x1
 1386 0001 11       		.uleb128 0x11
 1387 0002 01       		.byte	0x1
 1388 0003 25       		.uleb128 0x25
 1389 0004 0E       		.uleb128 0xe
 1390 0005 13       		.uleb128 0x13
 1391 0006 0B       		.uleb128 0xb
 1392 0007 03       		.uleb128 0x3
 1393 0008 0E       		.uleb128 0xe
 1394 0009 1B       		.uleb128 0x1b
 1395 000a 0E       		.uleb128 0xe
 1396 000b 55       		.uleb128 0x55
 1397 000c 17       		.uleb128 0x17
 1398 000d 11       		.uleb128 0x11
 1399 000e 01       		.uleb128 0x1
 1400 000f 10       		.uleb128 0x10
 1401 0010 17       		.uleb128 0x17
 1402 0011 00       		.byte	0
 1403 0012 00       		.byte	0
 1404 0013 02       		.uleb128 0x2
 1405 0014 24       		.uleb128 0x24
 1406 0015 00       		.byte	0
 1407 0016 0B       		.uleb128 0xb
 1408 0017 0B       		.uleb128 0xb
 1409 0018 3E       		.uleb128 0x3e
 1410 0019 0B       		.uleb128 0xb
 1411 001a 03       		.uleb128 0x3
 1412 001b 0E       		.uleb128 0xe
 1413 001c 00       		.byte	0
 1414 001d 00       		.byte	0
 1415 001e 03       		.uleb128 0x3
 1416 001f 24       		.uleb128 0x24
 1417 0020 00       		.byte	0
 1418 0021 0B       		.uleb128 0xb
 1419 0022 0B       		.uleb128 0xb
 1420 0023 3E       		.uleb128 0x3e
 1421 0024 0B       		.uleb128 0xb
 1422 0025 03       		.uleb128 0x3
 1423 0026 08       		.uleb128 0x8
 1424 0027 00       		.byte	0
 1425 0028 00       		.byte	0
 1426 0029 04       		.uleb128 0x4
 1427 002a 16       		.uleb128 0x16
 1428 002b 00       		.byte	0
 1429 002c 03       		.uleb128 0x3
 1430 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 54


 1431 002e 3A       		.uleb128 0x3a
 1432 002f 0B       		.uleb128 0xb
 1433 0030 3B       		.uleb128 0x3b
 1434 0031 05       		.uleb128 0x5
 1435 0032 49       		.uleb128 0x49
 1436 0033 13       		.uleb128 0x13
 1437 0034 00       		.byte	0
 1438 0035 00       		.byte	0
 1439 0036 05       		.uleb128 0x5
 1440 0037 35       		.uleb128 0x35
 1441 0038 00       		.byte	0
 1442 0039 49       		.uleb128 0x49
 1443 003a 13       		.uleb128 0x13
 1444 003b 00       		.byte	0
 1445 003c 00       		.byte	0
 1446 003d 06       		.uleb128 0x6
 1447 003e 2E       		.uleb128 0x2e
 1448 003f 00       		.byte	0
 1449 0040 3F       		.uleb128 0x3f
 1450 0041 19       		.uleb128 0x19
 1451 0042 03       		.uleb128 0x3
 1452 0043 0E       		.uleb128 0xe
 1453 0044 3A       		.uleb128 0x3a
 1454 0045 0B       		.uleb128 0xb
 1455 0046 3B       		.uleb128 0x3b
 1456 0047 0B       		.uleb128 0xb
 1457 0048 27       		.uleb128 0x27
 1458 0049 19       		.uleb128 0x19
 1459 004a 11       		.uleb128 0x11
 1460 004b 01       		.uleb128 0x1
 1461 004c 12       		.uleb128 0x12
 1462 004d 06       		.uleb128 0x6
 1463 004e 40       		.uleb128 0x40
 1464 004f 18       		.uleb128 0x18
 1465 0050 9642     		.uleb128 0x2116
 1466 0052 19       		.uleb128 0x19
 1467 0053 00       		.byte	0
 1468 0054 00       		.byte	0
 1469 0055 07       		.uleb128 0x7
 1470 0056 2E       		.uleb128 0x2e
 1471 0057 00       		.byte	0
 1472 0058 3F       		.uleb128 0x3f
 1473 0059 19       		.uleb128 0x19
 1474 005a 03       		.uleb128 0x3
 1475 005b 0E       		.uleb128 0xe
 1476 005c 3A       		.uleb128 0x3a
 1477 005d 0B       		.uleb128 0xb
 1478 005e 3B       		.uleb128 0x3b
 1479 005f 0B       		.uleb128 0xb
 1480 0060 27       		.uleb128 0x27
 1481 0061 19       		.uleb128 0x19
 1482 0062 11       		.uleb128 0x11
 1483 0063 01       		.uleb128 0x1
 1484 0064 12       		.uleb128 0x12
 1485 0065 06       		.uleb128 0x6
 1486 0066 40       		.uleb128 0x40
 1487 0067 18       		.uleb128 0x18
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 55


 1488 0068 9742     		.uleb128 0x2117
 1489 006a 19       		.uleb128 0x19
 1490 006b 00       		.byte	0
 1491 006c 00       		.byte	0
 1492 006d 08       		.uleb128 0x8
 1493 006e 2E       		.uleb128 0x2e
 1494 006f 01       		.byte	0x1
 1495 0070 3F       		.uleb128 0x3f
 1496 0071 19       		.uleb128 0x19
 1497 0072 03       		.uleb128 0x3
 1498 0073 0E       		.uleb128 0xe
 1499 0074 3A       		.uleb128 0x3a
 1500 0075 0B       		.uleb128 0xb
 1501 0076 3B       		.uleb128 0x3b
 1502 0077 0B       		.uleb128 0xb
 1503 0078 27       		.uleb128 0x27
 1504 0079 19       		.uleb128 0x19
 1505 007a 11       		.uleb128 0x11
 1506 007b 01       		.uleb128 0x1
 1507 007c 12       		.uleb128 0x12
 1508 007d 06       		.uleb128 0x6
 1509 007e 40       		.uleb128 0x40
 1510 007f 18       		.uleb128 0x18
 1511 0080 9642     		.uleb128 0x2116
 1512 0082 19       		.uleb128 0x19
 1513 0083 01       		.uleb128 0x1
 1514 0084 13       		.uleb128 0x13
 1515 0085 00       		.byte	0
 1516 0086 00       		.byte	0
 1517 0087 09       		.uleb128 0x9
 1518 0088 34       		.uleb128 0x34
 1519 0089 00       		.byte	0
 1520 008a 03       		.uleb128 0x3
 1521 008b 0E       		.uleb128 0xe
 1522 008c 3A       		.uleb128 0x3a
 1523 008d 0B       		.uleb128 0xb
 1524 008e 3B       		.uleb128 0x3b
 1525 008f 0B       		.uleb128 0xb
 1526 0090 49       		.uleb128 0x49
 1527 0091 13       		.uleb128 0x13
 1528 0092 02       		.uleb128 0x2
 1529 0093 18       		.uleb128 0x18
 1530 0094 00       		.byte	0
 1531 0095 00       		.byte	0
 1532 0096 0A       		.uleb128 0xa
 1533 0097 2E       		.uleb128 0x2e
 1534 0098 00       		.byte	0
 1535 0099 3F       		.uleb128 0x3f
 1536 009a 19       		.uleb128 0x19
 1537 009b 03       		.uleb128 0x3
 1538 009c 0E       		.uleb128 0xe
 1539 009d 3A       		.uleb128 0x3a
 1540 009e 0B       		.uleb128 0xb
 1541 009f 3B       		.uleb128 0x3b
 1542 00a0 05       		.uleb128 0x5
 1543 00a1 27       		.uleb128 0x27
 1544 00a2 19       		.uleb128 0x19
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 56


 1545 00a3 49       		.uleb128 0x49
 1546 00a4 13       		.uleb128 0x13
 1547 00a5 11       		.uleb128 0x11
 1548 00a6 01       		.uleb128 0x1
 1549 00a7 12       		.uleb128 0x12
 1550 00a8 06       		.uleb128 0x6
 1551 00a9 40       		.uleb128 0x40
 1552 00aa 18       		.uleb128 0x18
 1553 00ab 9742     		.uleb128 0x2117
 1554 00ad 19       		.uleb128 0x19
 1555 00ae 00       		.byte	0
 1556 00af 00       		.byte	0
 1557 00b0 0B       		.uleb128 0xb
 1558 00b1 2E       		.uleb128 0x2e
 1559 00b2 01       		.byte	0x1
 1560 00b3 3F       		.uleb128 0x3f
 1561 00b4 19       		.uleb128 0x19
 1562 00b5 03       		.uleb128 0x3
 1563 00b6 0E       		.uleb128 0xe
 1564 00b7 3A       		.uleb128 0x3a
 1565 00b8 0B       		.uleb128 0xb
 1566 00b9 3B       		.uleb128 0x3b
 1567 00ba 05       		.uleb128 0x5
 1568 00bb 27       		.uleb128 0x27
 1569 00bc 19       		.uleb128 0x19
 1570 00bd 11       		.uleb128 0x11
 1571 00be 01       		.uleb128 0x1
 1572 00bf 12       		.uleb128 0x12
 1573 00c0 06       		.uleb128 0x6
 1574 00c1 40       		.uleb128 0x40
 1575 00c2 18       		.uleb128 0x18
 1576 00c3 9742     		.uleb128 0x2117
 1577 00c5 19       		.uleb128 0x19
 1578 00c6 01       		.uleb128 0x1
 1579 00c7 13       		.uleb128 0x13
 1580 00c8 00       		.byte	0
 1581 00c9 00       		.byte	0
 1582 00ca 0C       		.uleb128 0xc
 1583 00cb 05       		.uleb128 0x5
 1584 00cc 00       		.byte	0
 1585 00cd 03       		.uleb128 0x3
 1586 00ce 0E       		.uleb128 0xe
 1587 00cf 3A       		.uleb128 0x3a
 1588 00d0 0B       		.uleb128 0xb
 1589 00d1 3B       		.uleb128 0x3b
 1590 00d2 05       		.uleb128 0x5
 1591 00d3 49       		.uleb128 0x49
 1592 00d4 13       		.uleb128 0x13
 1593 00d5 02       		.uleb128 0x2
 1594 00d6 18       		.uleb128 0x18
 1595 00d7 00       		.byte	0
 1596 00d8 00       		.byte	0
 1597 00d9 0D       		.uleb128 0xd
 1598 00da 2E       		.uleb128 0x2e
 1599 00db 01       		.byte	0x1
 1600 00dc 3F       		.uleb128 0x3f
 1601 00dd 19       		.uleb128 0x19
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 57


 1602 00de 03       		.uleb128 0x3
 1603 00df 0E       		.uleb128 0xe
 1604 00e0 3A       		.uleb128 0x3a
 1605 00e1 0B       		.uleb128 0xb
 1606 00e2 3B       		.uleb128 0x3b
 1607 00e3 05       		.uleb128 0x5
 1608 00e4 27       		.uleb128 0x27
 1609 00e5 19       		.uleb128 0x19
 1610 00e6 11       		.uleb128 0x11
 1611 00e7 01       		.uleb128 0x1
 1612 00e8 12       		.uleb128 0x12
 1613 00e9 06       		.uleb128 0x6
 1614 00ea 40       		.uleb128 0x40
 1615 00eb 18       		.uleb128 0x18
 1616 00ec 9642     		.uleb128 0x2116
 1617 00ee 19       		.uleb128 0x19
 1618 00ef 01       		.uleb128 0x1
 1619 00f0 13       		.uleb128 0x13
 1620 00f1 00       		.byte	0
 1621 00f2 00       		.byte	0
 1622 00f3 0E       		.uleb128 0xe
 1623 00f4 34       		.uleb128 0x34
 1624 00f5 00       		.byte	0
 1625 00f6 03       		.uleb128 0x3
 1626 00f7 0E       		.uleb128 0xe
 1627 00f8 3A       		.uleb128 0x3a
 1628 00f9 0B       		.uleb128 0xb
 1629 00fa 3B       		.uleb128 0x3b
 1630 00fb 05       		.uleb128 0x5
 1631 00fc 49       		.uleb128 0x49
 1632 00fd 13       		.uleb128 0x13
 1633 00fe 02       		.uleb128 0x2
 1634 00ff 18       		.uleb128 0x18
 1635 0100 00       		.byte	0
 1636 0101 00       		.byte	0
 1637 0102 0F       		.uleb128 0xf
 1638 0103 0F       		.uleb128 0xf
 1639 0104 00       		.byte	0
 1640 0105 0B       		.uleb128 0xb
 1641 0106 0B       		.uleb128 0xb
 1642 0107 49       		.uleb128 0x49
 1643 0108 13       		.uleb128 0x13
 1644 0109 00       		.byte	0
 1645 010a 00       		.byte	0
 1646 010b 10       		.uleb128 0x10
 1647 010c 26       		.uleb128 0x26
 1648 010d 00       		.byte	0
 1649 010e 49       		.uleb128 0x49
 1650 010f 13       		.uleb128 0x13
 1651 0110 00       		.byte	0
 1652 0111 00       		.byte	0
 1653 0112 11       		.uleb128 0x11
 1654 0113 2E       		.uleb128 0x2e
 1655 0114 01       		.byte	0x1
 1656 0115 3F       		.uleb128 0x3f
 1657 0116 19       		.uleb128 0x19
 1658 0117 03       		.uleb128 0x3
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 58


 1659 0118 0E       		.uleb128 0xe
 1660 0119 3A       		.uleb128 0x3a
 1661 011a 0B       		.uleb128 0xb
 1662 011b 3B       		.uleb128 0x3b
 1663 011c 05       		.uleb128 0x5
 1664 011d 27       		.uleb128 0x27
 1665 011e 19       		.uleb128 0x19
 1666 011f 49       		.uleb128 0x49
 1667 0120 13       		.uleb128 0x13
 1668 0121 11       		.uleb128 0x11
 1669 0122 01       		.uleb128 0x1
 1670 0123 12       		.uleb128 0x12
 1671 0124 06       		.uleb128 0x6
 1672 0125 40       		.uleb128 0x40
 1673 0126 18       		.uleb128 0x18
 1674 0127 9742     		.uleb128 0x2117
 1675 0129 19       		.uleb128 0x19
 1676 012a 01       		.uleb128 0x1
 1677 012b 13       		.uleb128 0x13
 1678 012c 00       		.byte	0
 1679 012d 00       		.byte	0
 1680 012e 12       		.uleb128 0x12
 1681 012f 0B       		.uleb128 0xb
 1682 0130 01       		.byte	0x1
 1683 0131 11       		.uleb128 0x11
 1684 0132 01       		.uleb128 0x1
 1685 0133 12       		.uleb128 0x12
 1686 0134 06       		.uleb128 0x6
 1687 0135 00       		.byte	0
 1688 0136 00       		.byte	0
 1689 0137 13       		.uleb128 0x13
 1690 0138 34       		.uleb128 0x34
 1691 0139 00       		.byte	0
 1692 013a 03       		.uleb128 0x3
 1693 013b 0E       		.uleb128 0xe
 1694 013c 3A       		.uleb128 0x3a
 1695 013d 0B       		.uleb128 0xb
 1696 013e 3B       		.uleb128 0x3b
 1697 013f 0B       		.uleb128 0xb
 1698 0140 49       		.uleb128 0x49
 1699 0141 13       		.uleb128 0x13
 1700 0142 3F       		.uleb128 0x3f
 1701 0143 19       		.uleb128 0x19
 1702 0144 02       		.uleb128 0x2
 1703 0145 18       		.uleb128 0x18
 1704 0146 00       		.byte	0
 1705 0147 00       		.byte	0
 1706 0148 00       		.byte	0
 1707              		.section	.debug_aranges,"",%progbits
 1708 0000 9C000000 		.4byte	0x9c
 1709 0004 0200     		.2byte	0x2
 1710 0006 00000000 		.4byte	.Ldebug_info0
 1711 000a 04       		.byte	0x4
 1712 000b 00       		.byte	0
 1713 000c 0000     		.2byte	0
 1714 000e 0000     		.2byte	0
 1715 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 59


 1716 0014 24000000 		.4byte	.LFE0-.LFB0
 1717 0018 00000000 		.4byte	.LFB1
 1718 001c 2C000000 		.4byte	.LFE1-.LFB1
 1719 0020 00000000 		.4byte	.LFB2
 1720 0024 34000000 		.4byte	.LFE2-.LFB2
 1721 0028 00000000 		.4byte	.LFB3
 1722 002c 34000000 		.4byte	.LFE3-.LFB3
 1723 0030 00000000 		.4byte	.LFB4
 1724 0034 0E000000 		.4byte	.LFE4-.LFB4
 1725 0038 00000000 		.4byte	.LFB5
 1726 003c 14000000 		.4byte	.LFE5-.LFB5
 1727 0040 00000000 		.4byte	.LFB6
 1728 0044 20000000 		.4byte	.LFE6-.LFB6
 1729 0048 00000000 		.4byte	.LFB7
 1730 004c 2C000000 		.4byte	.LFE7-.LFB7
 1731 0050 00000000 		.4byte	.LFB8
 1732 0054 18000000 		.4byte	.LFE8-.LFB8
 1733 0058 00000000 		.4byte	.LFB9
 1734 005c 34000000 		.4byte	.LFE9-.LFB9
 1735 0060 00000000 		.4byte	.LFB10
 1736 0064 44000000 		.4byte	.LFE10-.LFB10
 1737 0068 00000000 		.4byte	.LFB11
 1738 006c 44000000 		.4byte	.LFE11-.LFB11
 1739 0070 00000000 		.4byte	.LFB12
 1740 0074 34000000 		.4byte	.LFE12-.LFB12
 1741 0078 00000000 		.4byte	.LFB13
 1742 007c 40000000 		.4byte	.LFE13-.LFB13
 1743 0080 00000000 		.4byte	.LFB14
 1744 0084 44000000 		.4byte	.LFE14-.LFB14
 1745 0088 00000000 		.4byte	.LFB15
 1746 008c 9C000000 		.4byte	.LFE15-.LFB15
 1747 0090 00000000 		.4byte	.LFB16
 1748 0094 14000000 		.4byte	.LFE16-.LFB16
 1749 0098 00000000 		.4byte	0
 1750 009c 00000000 		.4byte	0
 1751              		.section	.debug_ranges,"",%progbits
 1752              	.Ldebug_ranges0:
 1753 0000 00000000 		.4byte	.LFB0
 1754 0004 24000000 		.4byte	.LFE0
 1755 0008 00000000 		.4byte	.LFB1
 1756 000c 2C000000 		.4byte	.LFE1
 1757 0010 00000000 		.4byte	.LFB2
 1758 0014 34000000 		.4byte	.LFE2
 1759 0018 00000000 		.4byte	.LFB3
 1760 001c 34000000 		.4byte	.LFE3
 1761 0020 00000000 		.4byte	.LFB4
 1762 0024 0E000000 		.4byte	.LFE4
 1763 0028 00000000 		.4byte	.LFB5
 1764 002c 14000000 		.4byte	.LFE5
 1765 0030 00000000 		.4byte	.LFB6
 1766 0034 20000000 		.4byte	.LFE6
 1767 0038 00000000 		.4byte	.LFB7
 1768 003c 2C000000 		.4byte	.LFE7
 1769 0040 00000000 		.4byte	.LFB8
 1770 0044 18000000 		.4byte	.LFE8
 1771 0048 00000000 		.4byte	.LFB9
 1772 004c 34000000 		.4byte	.LFE9
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 60


 1773 0050 00000000 		.4byte	.LFB10
 1774 0054 44000000 		.4byte	.LFE10
 1775 0058 00000000 		.4byte	.LFB11
 1776 005c 44000000 		.4byte	.LFE11
 1777 0060 00000000 		.4byte	.LFB12
 1778 0064 34000000 		.4byte	.LFE12
 1779 0068 00000000 		.4byte	.LFB13
 1780 006c 40000000 		.4byte	.LFE13
 1781 0070 00000000 		.4byte	.LFB14
 1782 0074 44000000 		.4byte	.LFE14
 1783 0078 00000000 		.4byte	.LFB15
 1784 007c 9C000000 		.4byte	.LFE15
 1785 0080 00000000 		.4byte	.LFB16
 1786 0084 14000000 		.4byte	.LFE16
 1787 0088 00000000 		.4byte	0
 1788 008c 00000000 		.4byte	0
 1789              		.section	.debug_line,"",%progbits
 1790              	.Ldebug_line0:
 1791 0000 F1010000 		.section	.debug_str,"MS",%progbits,1
 1791      02004300 
 1791      00000201 
 1791      FB0E0D00 
 1791      01010101 
 1792              	.LASF6:
 1793 0000 6C6F6E67 		.ascii	"long long int\000"
 1793      206C6F6E 
 1793      6720696E 
 1793      7400
 1794              	.LASF19:
 1795 000e 55415254 		.ascii	"UART_1_Init\000"
 1795      5F315F49 
 1795      6E697400 
 1796              	.LASF18:
 1797 001a 55415254 		.ascii	"UART_1_Start\000"
 1797      5F315F53 
 1797      74617274 
 1797      00
 1798              	.LASF46:
 1799 0027 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1799      43313120 
 1799      352E342E 
 1799      31203230 
 1799      31363036 
 1800 005a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1800      20726576 
 1800      6973696F 
 1800      6E203233 
 1800      37373135 
 1801 008d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1801      66756E63 
 1801      74696F6E 
 1801      2D736563 
 1801      74696F6E 
 1802              	.LASF23:
 1803 00b5 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 1803      5F315F57 
 1803      72697465 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 61


 1803      436F6E74 
 1803      726F6C52 
 1804              	.LASF43:
 1805 00d1 74785065 		.ascii	"txPeriod\000"
 1805      72696F64 
 1805      00
 1806              	.LASF42:
 1807 00da 746D7053 		.ascii	"tmpStat\000"
 1807      74617400 
 1808              	.LASF3:
 1809 00e2 73686F72 		.ascii	"short unsigned int\000"
 1809      7420756E 
 1809      7369676E 
 1809      65642069 
 1809      6E7400
 1810              	.LASF8:
 1811 00f5 756E7369 		.ascii	"unsigned int\000"
 1811      676E6564 
 1811      20696E74 
 1811      00
 1812              	.LASF44:
 1813 0102 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 1813      5F315F53 
 1813      65745478 
 1813      41646472 
 1813      6573734D 
 1814              	.LASF30:
 1815 011a 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 1815      5F315F52 
 1815      65616454 
 1815      78537461 
 1815      74757300 
 1816              	.LASF33:
 1817 012e 73747269 		.ascii	"string\000"
 1817      6E6700
 1818              	.LASF11:
 1819 0135 666C6F61 		.ascii	"float\000"
 1819      7400
 1820              	.LASF48:
 1821 013b 433A5C55 		.ascii	"C:\\Users\\212596486\\Documents\\PSoC Creator\\Temp"
 1821      73657273 
 1821      5C323132 
 1821      35393634 
 1821      38365C44 
 1822 0169 20322E63 		.ascii	" 2.cydsn\000"
 1822      7964736E 
 1822      00
 1823              	.LASF45:
 1824 0172 61646472 		.ascii	"addressMode\000"
 1824      6573734D 
 1824      6F646500 
 1825              	.LASF15:
 1826 017e 72656738 		.ascii	"reg8\000"
 1826      00
 1827              	.LASF29:
 1828 0183 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 1828      5F315F52 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 62


 1828      65616443 
 1828      6F6E7472 
 1828      6F6C5265 
 1829              	.LASF21:
 1830 019e 55415254 		.ascii	"UART_1_Stop\000"
 1830      5F315F53 
 1830      746F7000 
 1831              	.LASF5:
 1832 01aa 6C6F6E67 		.ascii	"long unsigned int\000"
 1832      20756E73 
 1832      69676E65 
 1832      6420696E 
 1832      7400
 1833              	.LASF9:
 1834 01bc 75696E74 		.ascii	"uint8\000"
 1834      3800
 1835              	.LASF25:
 1836 01c2 636F6E74 		.ascii	"control\000"
 1836      726F6C00 
 1837              	.LASF36:
 1838 01ca 62797465 		.ascii	"byteCount\000"
 1838      436F756E 
 1838      7400
 1839              	.LASF22:
 1840 01d4 656E6162 		.ascii	"enableInterrupts\000"
 1840      6C65496E 
 1840      74657272 
 1840      75707473 
 1840      00
 1841              	.LASF1:
 1842 01e5 756E7369 		.ascii	"unsigned char\000"
 1842      676E6564 
 1842      20636861 
 1842      7200
 1843              	.LASF12:
 1844 01f3 646F7562 		.ascii	"double\000"
 1844      6C6500
 1845              	.LASF26:
 1846 01fa 696E7453 		.ascii	"intSrc\000"
 1846      726300
 1847              	.LASF2:
 1848 0201 73686F72 		.ascii	"short int\000"
 1848      7420696E 
 1848      7400
 1849              	.LASF10:
 1850 020b 75696E74 		.ascii	"uint16\000"
 1850      313600
 1851              	.LASF31:
 1852 0212 55415254 		.ascii	"UART_1_PutChar\000"
 1852      5F315F50 
 1852      75744368 
 1852      617200
 1853              	.LASF47:
 1854 0221 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 1854      72617465 
 1854      645F536F 
 1854      75726365 
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 63


 1854      5C50536F 
 1855              	.LASF49:
 1856 0241 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 1856      5F315F47 
 1856      65745478 
 1856      42756666 
 1856      65725369 
 1857              	.LASF7:
 1858 0258 6C6F6E67 		.ascii	"long long unsigned int\000"
 1858      206C6F6E 
 1858      6720756E 
 1858      7369676E 
 1858      65642069 
 1859              	.LASF37:
 1860 026f 55415254 		.ascii	"UART_1_PutCRLF\000"
 1860      5F315F50 
 1860      75744352 
 1860      4C4600
 1861              	.LASF34:
 1862 027e 62756649 		.ascii	"bufIndex\000"
 1862      6E646578 
 1862      00
 1863              	.LASF40:
 1864 0287 55415254 		.ascii	"UART_1_SendBreak\000"
 1864      5F315F53 
 1864      656E6442 
 1864      7265616B 
 1864      00
 1865              	.LASF35:
 1866 0298 55415254 		.ascii	"UART_1_PutArray\000"
 1866      5F315F50 
 1866      75744172 
 1866      72617900 
 1867              	.LASF17:
 1868 02a8 73697A65 		.ascii	"sizetype\000"
 1868      74797065 
 1868      00
 1869              	.LASF13:
 1870 02b1 63686172 		.ascii	"char8\000"
 1870      3800
 1871              	.LASF28:
 1872 02b7 74784461 		.ascii	"txDataByte\000"
 1872      74614279 
 1872      746500
 1873              	.LASF14:
 1874 02c2 63686172 		.ascii	"char\000"
 1874      00
 1875              	.LASF41:
 1876 02c7 7265744D 		.ascii	"retMode\000"
 1876      6F646500 
 1877              	.LASF27:
 1878 02cf 55415254 		.ascii	"UART_1_WriteTxData\000"
 1878      5F315F57 
 1878      72697465 
 1878      54784461 
 1878      746100
 1879              	.LASF39:
ARM GAS  C:\Users\212596~1\AppData\Local\Temp\cckpeYA4.s 			page 64


 1880 02e2 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 1880      5F315F43 
 1880      6C656172 
 1880      54784275 
 1880      66666572 
 1881              	.LASF50:
 1882 02f7 55415254 		.ascii	"UART_1_initVar\000"
 1882      5F315F69 
 1882      6E697456 
 1882      617200
 1883              	.LASF4:
 1884 0306 6C6F6E67 		.ascii	"long int\000"
 1884      20696E74 
 1884      00
 1885              	.LASF24:
 1886 030f 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 1886      5F315F53 
 1886      65745478 
 1886      496E7465 
 1886      72727570 
 1887              	.LASF20:
 1888 0329 55415254 		.ascii	"UART_1_Enable\000"
 1888      5F315F45 
 1888      6E61626C 
 1888      6500
 1889              	.LASF16:
 1890 0337 6C6F6E67 		.ascii	"long double\000"
 1890      20646F75 
 1890      626C6500 
 1891              	.LASF0:
 1892 0343 7369676E 		.ascii	"signed char\000"
 1892      65642063 
 1892      68617200 
 1893              	.LASF32:
 1894 034f 55415254 		.ascii	"UART_1_PutString\000"
 1894      5F315F50 
 1894      75745374 
 1894      72696E67 
 1894      00
 1895              	.LASF38:
 1896 0360 73697A65 		.ascii	"size\000"
 1896      00
 1897              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
